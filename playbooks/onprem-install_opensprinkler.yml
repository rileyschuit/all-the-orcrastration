---
- name: Install opensprinkler
  hosts: all
  # Usually installed on a Rpi, defaults to user 'pi'
  remote_user: "{{ remote_user | default('pi') }}"
  become: True
  gather_facts: False
  connection: paramiko

  # vars:
    # syms_to_create:
    #   - {'src': '/usr/bin/python3', 'dest': '/usr/bin/python', 'type': 'symlink','mode': '755'}
    # packages:
    #   - git
    #   - python3
    #   - python3-pip
    #   - python3-apt
    #   - python3-setuptools

  pre_tasks:
    - name: Download roles if we are doing local dev work
      shell: ansible-galaxy install -p ../roles/ rileyschuit.rpi-opensprinkler
      delegate_to: localhost
      when: lookup('env','USER') != 'awx'
      run_once: true
      connection: local
      become: False

  tasks:
    - name: Check that OpenSprinkler is not running and install
      block:
        - name: Requied pip module
          pip:
            name: psutil
            state: present

        - name: Check for process running
          pids:
            name: OpenSprinkler
          register: opensprinkler_pid
          failed_when: opensprinkler_pid.pids | length > 1

      rescue:
        - name: Include Installation role
          include_role:
            name: rileyschuit.rpi-opensprinkler

    - name: Set Hostname
      hostname:
        name: "{{ hostname | default('opensprinkler')}}"

  # tasks:
  #   - name: Required packages
  #     apt:
  #       name: "{{ packages }}"
  #       state: present
  #
  #
  #   - name: Instal pip packages
  #     pip:
  #       name:
  #         - setuptools
  #         - wheel
  #         - pexpect
  #       executable: pip3
  #
  #   - name: Clone required packages
  #     git:
  #       repo: "{{ item.repo }}"
  #       dest: "{{ item.dest }}"
  #     with_items:
  #       - { "repo": "https://github.com/OpenSprinkler/OpenSprinkler-Firmware.git", "dest": "/usr/local/src/opensprinkler"}
  #
  #   - name: Check for the pid
  #     pids:
  #       name: /usr/local/src/opensprinkler/OpenSprinkler
  #     register: pid_check
  #
  #   - name: debug
  #     debug:
  #       msg: "{{ pid_check }}"

      # - name: block
      #   when:
      #     - ansible_facts.services['opensprinkler'] is not defined
      #   block:
      #     - name: Generic question with multiple different responses
      #       expect:
      #         command: /usr/local/src/opensprinkler/build.sh
      #         responses:
      #           Question:
      #             - y
